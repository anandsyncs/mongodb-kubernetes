---
#########################
#########################
## Golang Linter rules ##
#########################
#########################

# configure golangci-lint
# see https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml
issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
        - gosec
        - goconst
    - path: ^pkg\/util\/env
      linters:
        - forbidigo
    - path: ^main.go$
      linters:
        - forbidigo
linters:
  enable:
    - govet
    - errcheck
    - staticcheck
    - stylecheck
    - unused
    - gosimple
    - ineffassign
    - typecheck
    - rowserrcheck
    - gosec
    - unconvert
    - gci
    - gofmt
    - dupl
    - goconst
    - gofumpt
    - forbidigo

run:
  modules-download-mode: mod
  # timeout for analysis, e.g., 30s, 5m, default is 1m
  timeout: 5m
  # default concurrency is an available CPU number
  concurrency: 4

linters-settings:
  stylecheck:
    # STxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: ["all", "-ST1000", "-ST1003", "-ST1020", "-ST1021", "-ST1022", "-ST1023"]

  gofumpt:
    # Module path which contains the source code being formatted.
    # Default: ""
    module-path: github.com/10gen/ops-manager-kubernetes

  forbidigo:
    forbid:
      - p: os\.(Getenv|LookupEnv|Environ|ExpandEnv)
        pkg: os
        msg: "Reading environemnt variables here is prohibited. Please read environment variables in the main package."
      - p: os\.(Clearenv|Unsetenv|Setenv)
        msg: "Modifying environemnt variables is prohibited."
        pkg: os
      - p: env\.(Read.*?|EnsureVar)
        pkg: github.com/10gen/ops-manager-kubernetes/pkg/util/env
        msg: "Using this env package here is prohibited. Please work with environment variables in the main package."
    # Rules with the `pkg` depend on it
    analyze-types: true

  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/10gen/ops-manager-kubernetes) # Custom section: groups all imports with the specified Prefix.
      - prefix(github.com/mongodb/mongodb-kubernetes-operator) # Custom section: groups all imports with the specified Prefix.
      - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
      - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
      - localmodule # Local module section: contains all local packages. This section is not present unless explicitly enabled.
