# edit the fields which have the number "2" in it, with the replicaset member number you want to deploy
# for example: to deploy the 0th member edit the occurences of "my-replica-set-2" with "my-replica-set-0"
apiVersion: v1
kind: Pod
metadata:
  generateName: my-replica-set-
  labels:
    app: my-replica-set-2
    controller: mongodb-enterprise-operator
    pod-anti-affinity: my-replica-set
    statefulset.kubernetes.io/pod-name: my-replica-set-2
    manager: kube-controller-manager
  name: my-replica-set-2
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              pod-anti-affinity: my-replica-set
          topologyKey: kubernetes.io/hostname
        weight: 100
  containers:
  - command:
    - /opt/scripts/agent-launcher.sh
    env:
    - name: AGENT_API_KEY
      valueFrom:
        secretKeyRef:
          key: agentApiKey
          # create this secret object with the API key corresponding to the
          # cloud QA project you've created
          name: 605c39d90882a963fc3734f2-group-secret
    - name: AGENT_FLAGS
      value: -logFile,/var/log/mongodb-mms-automation/automation-agent.log,
    - name: BASE_URL
      value: https://cloud-qa.mongodb.com
      # chage the GROUP_ID corresponsing to the value of the cloud-manager project you have setup
    - name: GROUP_ID
      value: 605c39d90882a963fc3734f2
    - name: LOG_LEVEL
      value: DEBUG
    - name: SSL_REQUIRE_VALID_MMS_CERTIFICATES
      value: "true"
    - name: USER_LOGIN
      value: ZVKHFSEB
    image: quay.io/mongodb/mongodb-enterprise-database:2.0.0
    imagePullPolicy: Always
    livenessProbe:
      exec:
        command:
        - /opt/scripts/probe.sh
      failureThreshold: 6
      initialDelaySeconds: 60
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 30
    name: mongodb-enterprise-database
    ports:
    - containerPort: 27017
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /opt/scripts/readinessprobe
      failureThreshold: 240
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 500m
        memory: 700M
      requests:
        cpu: 200m
        memory: 300M
    securityContext:
      runAsNonRoot: true
      runAsUser: 2000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/scripts
      name: database-scripts
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: my-replica-set-2
  imagePullSecrets:
  - name: image-registries-secret
  initContainers:
    # might want to replace the image from your own ECR registry
  - image: 268558157000.dkr.ecr.eu-west-1.amazonaws.com/raj/ubuntu/mongodb-enterprise-init-database:latest
    imagePullPolicy: Always
    name: mongodb-enterprise-init-database
    resources: {}
    securityContext:
      runAsNonRoot: true
      runAsUser: 2000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/scripts
      name: database-scripts
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 2000
  serviceAccount: mongodb-enterprise-database-pods
  serviceAccountName: mongodb-enterprise-database-pods
  subdomain: my-replica-set-svc
  terminationGracePeriodSeconds: 600
  volumes:
  - emptyDir: {}
    name: database-scripts
