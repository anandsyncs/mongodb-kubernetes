stepback: true

variables:
  ops_manager_version: "3.7.0"

functions:

  "clone":
    - command: shell.exec
      params:
        script: |
          mkdir -p src/github.com/10gen
    - command: git.get_project
      type: system
      params:
        directory: src/github.com/10gen/ops-manager-kubernetes
  "build-operator":
    - command: shell.exec
      type: system
      params:
        script: |
          src/github.com/10gen/ops-manager-kubernetes/scripts/evergreen/build-operator
    - command: s3.put
      params:
        aws_key: ${mms_build_s3_aws_access_key}
        aws_secret: ${mms_build_s3_aws_secret}
        local_file: om-operator
        remote_file: ops-manager-operator/${revision}/om-operator
        bucket: ops-manager-kubernetes-build
        permissions: public-read
        content_type: application/octet-stream
  "setup-aws":
    - command: shell.exec
      params:
        shell: bash
        script: |
            src/github.com/10gen/ops-manager-kubernetes/scripts/evergreen/setup_aws
  "setup-docker":
    - command: shell.exec
      params:
          shell: bash
          script: |
            src/github.com/10gen/ops-manager-kubernetes/scripts/evergreen/setup_docker
  "publish-operator":
    - command: shell.exec
      params:
          script: |
            export AWS_ACCESS_KEY_ID=${mms_eng_test_aws_access_key}
            export AWS_SECRET_ACCESS_KEY=${mms_eng_test_aws_secret}
            export QUAY_ROBOT_TOKEN=${quay_robot_token}
            src/github.com/10gen/ops-manager-kubernetes/scripts/evergreen/upload_operator_image
  "publish-database":
    - command: shell.exec
      params:
          script: |
            export AWS_ACCESS_KEY_ID=${mms_eng_test_aws_access_key}
            export AWS_SECRET_ACCESS_KEY=${mms_eng_test_aws_secret}
            export QUAY_ROBOT_TOKEN=${quay_robot_token}
            src/github.com/10gen/ops-manager-kubernetes/scripts/evergreen/upload_database_image
tasks:

- name: build_and_publish
  tags: ["build_and_publish"]
  commands:
    - func: "clone"
    - func: "build-operator"
    - func: "setup-aws"
    - func: "setup-docker"
    - func: "publish-operator"
    - func: "publish-database"

- name: test
  tags: ["test"]
  commands:
    - func: "clone"
    - func: "build-operator"

post:
  - command: gotest.parse_files
    params:
      files: ["*.suite", "src/**/*.suite"]

buildvariants:

- name: build_and_publish
  run_on:
    # docker is not supported for rhel and has troubles in ubuntu1404,
    # for ubuntu1604 apt-get is run in parallel during docker installation which results in sporadic locking problems
    # so far ubuntu1804 works the best
     - ubuntu1804-build
  batchtime: 1440 # 1 day
  stepback: false
  tasks:
    - ".build_and_publish"

- name: test
  run_on:
    # docker is not supported for rhel and has troubles in ubuntu1404,
    # for ubuntu1604 apt-get is run in parallel during docker installation which results in sporadic locking problems
    # so far ubuntu1804 works the best
     - ubuntu1804-build
  batchtime: 1440 # 1 day
  stepback: false
  tasks:
    - ".test"
