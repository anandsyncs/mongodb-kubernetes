#
# Base Template Dockerfile for Database Image.
#

FROM {{ base_image }}

{% block variables %}
ENV MMS_HOME /mongodb-automation
ENV MMS_LOG_DIR /var/log/mongodb-mms-automation
ENV MDB_DIR /var/lib/mongodb-mms-automation/downloads

ARG MDB_URL
ARG BINARY_NAME
ARG AA_DOWNLOAD_URL
ARG AA_VERSION
{% endblock %}

{%- if is_appdb %}
LABEL name="MongoDB Enterprise AppDB" \
      version="${AA_VERSION}" \
      summary="MongoDB Enterprise AppDB" \
      description="MongoDB Enterprise AppDB" \
  {%- else %}
LABEL name="MongoDB Enterprise Database" \
      version="{{ version }}" \
      summary="MongoDB Enterprise Database Image" \
      description="MongoDB Enterprise Database Image" \
{%- endif %}
      vendor="MongoDB" \
      release="1" \
      maintainer="support@mongodb.com"

COPY LICENSE /licenses/mongodb-enterprise-database

{% block packages %}
{% endblock %}

# TODO: remove once database is using init container
COPY content/ "${MMS_HOME}"/files/

{% if is_appdb -%}

# Download and extract the MongoDB archive and put it where the automation agent expects to find it.
# So an AppDB agent will download MongoDB from the internet only if the version does not match the version we have put inside the container.
RUN curl --fail --retry 3 -L -o "${BINARY_NAME}" "${MDB_URL}${BINARY_NAME}" \
    && mkdir -p "${MDB_DIR}" \
    && tar -xzf "${BINARY_NAME}" \
    && rm "${BINARY_NAME}" \
    # We need to strip the binary name from its tgz extension
    && mv "${BINARY_NAME%.*}" "${MDB_DIR}" \
    && chmod -R 0775 "${MDB_DIR}"

# Download the latest Automation Agent binary

RUN curl --fail --retry 3 -L -o automation-agent.tar.gz "${AA_DOWNLOAD_URL}"  \
    && tar -xzf automation-agent.tar.gz \
    && mv mongodb-mms-automation-agent-*/mongodb-mms-automation-agent "${MMS_HOME}/files/" \
    && chmod +x "${MMS_HOME}/files/mongodb-mms-automation-agent" \
    && rm -rf automation-agent.tar.gz "mongodb-mms-automation-agent-*/"

    # would prefer to have specific versions instead of *
    # && mv "./mongodb-mms-automation-agent-${AA_VERSION}.linux_x86_64/mongodb-mms-automation-agent" "${MMS_HOME}/files/" \
    # && rm -rf automation-agent.tar.gz "mongodb-mms-automation-agent-${AA_VERSION}.linux_x86_64/"

# Remove when we move to init appdb
RUN echo "${AA_VERSION}" > "${MMS_HOME}/files/agent-version"

{% endif %}

# Set the required perms
RUN    mkdir -p "${MMS_LOG_DIR}" \
        && chmod 0775 "${MMS_LOG_DIR}" \
        && mkdir -p /var/lib/mongodb-mms-automation \
        && chmod 0775 /var/lib/mongodb-mms-automation \
        && mkdir -p /data \
        && chmod 0775 /data \
        && mkdir -p /journal \
        && chmod 0775 /journal \
        && chmod -R 0775 "${MMS_HOME}"

# USER needs to be set for this image to pass RedHat verification. Some customers have these requirements as well
# It does not matter what number it is, as long as it is set to something.
# However, OpenShift will run the container as a random user,
# and the number in this configuration is not relevant.
USER 2000

# TODO: make entrypoint be a sleep infinity once MDB is using init container
ENTRYPOINT ["/mongodb-automation/files/agent-launcher.sh"]
