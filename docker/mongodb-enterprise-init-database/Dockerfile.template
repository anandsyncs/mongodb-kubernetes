#
# Dockerfile for Init Image for Database or AppDB.
# to be called from github root (to be able to include probe code):
# /10gen/ops-manager-kubernetes] docker build -f docker/mongodb-enterprise-init-database/Dockerfile .
#

FROM golang:1.13-alpine as builder

COPY ./probe /build/
COPY ./probe_go_mod /build/
WORKDIR /build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -a -i -o readinessprobe .

FROM {{ base_image|default("busybox") }}

ARG VERSION

{%- if is_appdb %}
LABEL name="MongoDB Enterprise Init AppDB" \
      version="mongodb-enterprise-init-appdb-${VERSION}" \
      summary="MongoDB Enterprise AppDB Init Image" \
      description="Startup Scripts for MongoDB Enterprise Application Database for Ops Manager" \
{%- else %}
LABEL name="MongoDB Enterprise Init Database" \
      version="mongodb-enterprise-init-database-${VERSION}" \
      summary="MongoDB Enterprise Database Init Image" \
      description="Startup Scripts for MongoDB Enterprise Database" \
{%- endif %}
      release="1" \
      vendor="MongoDB" \
      maintainer="support@mongodb.com"

COPY --from=builder /build/readinessprobe /probes/
COPY ./docker/mongodb-enterprise-init-database/content/probe.sh /probes/

COPY ./docker/mongodb-enterprise-init-database/content/agent-launcher-lib.sh /scripts/
COPY ./docker/mongodb-enterprise-init-database/content/agent-launcher.sh /scripts/

COPY ./docker/mongodb-enterprise-init-database/content/LICENSE /licenses/mongodb-enterprise-appdb

ENTRYPOINT [ "/bin/cp", "-f", "/scripts/agent-launcher.sh", "/scripts/agent-launcher-lib.sh", "/probes/readinessprobe", "/probes/probe.sh", "/opt/scripts/" ]

{% block healthcheck %}
{% endblock %}
