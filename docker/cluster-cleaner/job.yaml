---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-cleaner

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-cleaner
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cluster-cleaner
  namespace: {{ .Values.namespace }}

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cluster-cleaner-delete-each-hour
  namespace: {{ .Values.namespace }}
spec:
  schedule: "16 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: cluster-cleaner

          # Do not restart if failed, this should not fail!
          restartPolicy: Never

          containers:
          - name: cluster-cleaner
            image: 268558157000.dkr.ecr.us-east-1.amazonaws.com/dev/cluster-cleaner:0.1

            env:
            - name: DELETE_OLDER_THAN_UNIT
              value: "hours"
            - name: DELETE_OLDER_THAN_AMOUNT
              value: "1"

# Second Job will kill Ops Manager Pod every Saturday
# TODO: this should also delete the PVCs and have MongoDB start from scratch
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cluster-cleaner-ops-manager
  namespace: {{ .Values.namespace }}
spec:
  # run every saturday
  schedule: "10 2 * * 6"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: cluster-cleaner

          restartPolicy: Never

          containers:
          - name: cluster-cleaner
            image: 268558157000.dkr.ecr.us-east-1.amazonaws.com/dev/cluster-cleaner:0.1

            env:
            # by passing DELETE_OPS_MANAGER we'll remove Ops Manager StatefulSet from
            - name: DELETE_OPS_MANAGER
              value: "true"
            - name: OM_NAMESPACE
              value: {{ .Values.namespace }}
