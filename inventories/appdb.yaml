vars:
  quay_registry: quay.io/mongodb/mongodb-enterprise-appdb
  rh_registry: scan.connect.redhat.com/ospid-31c2f102-af15-4e15-87b9-30710586d9ad/mongodb-enterprise-appdb
  s3_bucket_http: https://enterprise-operator-dockerfiles.s3.amazonaws.com/dockerfiles/mongodb-enterprise-appdb
  s3_bucket: s3://enterprise-operator-dockerfiles/dockerfiles/mongodb-enterprise-appdb

images:
- name: appdb
  vars:
    context: docker/mongodb-enterprise-database

  stages:
  - name: database-build-context
    task_type: docker_build
    dockerfile: Dockerfile.builder

    buildargs:
      mongodb_server_ubi: $(inputs.params.mongodb_server_ubi)
      mongodb_server_ubuntu: $(inputs.params.mongodb_server_ubuntu)
      mongodb_agent_linux: $(inputs.params.mongodb_agent_linux)

    output:
    - registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-appdb-context
      tag: $(inputs.params.version_id)
  
  - name: init-appdb-template-ubuntu
    task_type: dockerfile_template
    distro: ubuntu
    tags: ["ubuntu"]

    inputs:
    - version
    - is_appdb
    - agent_version

    output:
    - dockerfile: docker/mongodb-enterprise-database/Dockerfile.ubuntu-$(inputs.params.version_id)

  - name: database-build-ubuntu
    task_type: docker_build
    dockerfile: Dockerfile.ubuntu-$(inputs.params.version_id)
    tags: ["ubuntu"]

    buildargs:
      imagebase: $(inputs.params.registry)/ubuntu/mongodb-enterprise-appdb-context:$(inputs.params.version_id)

    output:
    - registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-appdb
      tag: $(inputs.params.version_id)

  - name: init-appdb-template-ubi
    task_type: dockerfile_template
    distro: ubi
    tags: ["ubi"]

    inputs:
    - version
    - is_appdb
    - agent_version

    output:
    - dockerfile: docker/mongodb-enterprise-database/Dockerfile.ubi-$(inputs.params.version_id)

  - name: database-build-ubi
    task_type: docker_build
    dockerfile: Dockerfile.ubi-$(inputs.params.version_id)
    tags: ["ubi"]

    buildargs:
      imagebase: $(inputs.params.registry)/ubuntu/mongodb-enterprise-appdb-context:$(inputs.params.version_id)

    output:
    - registry: $(inputs.params.registry)/ubi/mongodb-enterprise-appdb
      tag: $(inputs.params.version_id)

  - name: appdb-release-context
    task_type: tag_image
    tags: ["release"]

    source:
      registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-appdb-context
      tag: $(inputs.params.version_id)

    destination:
    - registry: $(inputs.params.quay_registry)
      tag: $(inputs.params.version)-context

  - name: appdb-template-ubi
    task_type: dockerfile_template
    distro: ubi
    tags: ["release"]

    inputs:
    - version
    - is_appdb
    - agent_version

    output:
    - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubi-$(inputs.params.version)

  - name: appdb-template-ubuntu
    task_type: dockerfile_template
    distro: ubuntu
    tags: ["release"]

    inputs:
    - version
    - is_appdb
    - agent_version

    output:
    - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubuntu-$(inputs.params.version)


- name: appdb-daily
  vars:
    context: .

  stages:
  - name: build-ubuntu
    task_type: docker_build

    inputs:
    - build_id

    dockerfile: $(inputs.params.s3_bucket_http)/Dockerfile.ubuntu-$(inputs.params.release_version)
    buildargs:
      imagebase: $(inputs.params.quay_registry):$(inputs.params.release_version)-context

    output:
    - registry: $(inputs.params.quay_registry)
      tag: $(inputs.params.release_version)
    - registry: $(inputs.params.quay_registry)
      tag: $(inputs.params.release_version)-b$(inputs.params.build_id)

  - name: build-ubi
    task_type: docker_build

    inputs:
    - build_id

    dockerfile: $(inputs.params.s3_bucket_http)/Dockerfile.ubi-$(inputs.params.release_version)
    buildargs:
      imagebase: $(inputs.params.quay_registry):$(inputs.params.release_version)-context

    output:
    - registry: $(inputs.params.quay_registry)-ubi
      tag: $(inputs.params.release_version)
    - registry: $(inputs.params.quay_registry)-ubi
      tag: $(inputs.params.release_version)-b$(inputs.params.build_id)
    - registry: $(inputs.params.rh_registry)
      tag: $(inputs.params.release_version)-b$(inputs.params.build_id)
