vars:
  readiness_probe_repo: quay.io/mongodb/mongodb-kubernetes-readinessprobe
  quay_registry: quay.io/mongodb/mongodb-enterprise-init-database
  s3_bucket: s3://enterprise-operator-dockerfiles/dockerfiles/mongodb-enterprise-init-database


images:
  - name: init-database
    vars:
      context: .
      template_context: docker/mongodb-enterprise-init-database

    stages:
      - name: init-database-build-context
        task_type: docker_build
        dockerfile: docker/mongodb-enterprise-init-database/Dockerfile.builder

        buildargs:
          mongodb_tools_url_ubi: $(inputs.params.mongodb_tools_url_ubi)
          mongodb_tools_url_ubuntu: $(inputs.params.mongodb_tools_url_ubuntu)
          readiness_probe_version: $(inputs.params.readiness_probe_version)
          readiness_probe_repo: $(inputs.params.readiness_probe_repo)
          version_upgrade_post_start_hook_version: $(inputs.params.version_upgrade_post_start_hook_version)

        output:
          - registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database-context
            tag: $(inputs.params.version_id)

      - name: init-database-template-ubuntu
        task_type: dockerfile_template

        tags: ["ubuntu"]
        template_file_extension: busybox

        inputs:
          - is_appdb

        output:
        - dockerfile: $(functions.tempfile)

      - name: init-database-build-ubuntu
        task_type: docker_build
        tags: ["ubuntu"]

        buildargs:
          version: $(inputs.params.version)
          imagebase: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database-context:$(inputs.params.version_id)

        dockerfile: $(stages['init-database-template-ubuntu'].outputs[0].dockerfile)

        inputs:
          - is_appdb

        output:
          - registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database
            tag: latest

      - name: init-database-template-ubi
        task_type: dockerfile_template
        template_file_extension: ubi_minimal
        tags: ["ubi"]

        inputs:
        - is_appdb
        output:
        - dockerfile: $(functions.tempfile)

      - name: init-database-build-ubi
        task_type: docker_build
        tags: ["ubi"]

        buildargs:
          imagebase: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database-context:$(inputs.params.version_id)
          version: $(inputs.params.version)

        dockerfile: $(stages['init-database-template-ubi'].outputs[0].dockerfile)
        inputs:
          - is_appdb

        output:
          - registry: $(inputs.params.registry)/ubi/mongodb-enterprise-init-database
            tag: $(inputs.params.version_id)

      - name: init-database-release-context
        task_type: tag_image
        tags: ["release"]

        source:
          registry: $(inputs.params.registry)/ubuntu/mongodb-enterprise-init-database-context
          tag: $(inputs.params.version_id)

        destination:
        - registry: $(inputs.params.quay_registry)
          tag: $(inputs.params.version)-context

      - name: init-database-template-ubi
        task_type: dockerfile_template
        template_file_extension: ubi_minimal
        tags: ["release"]

        inputs:
        - is_appdb

        output:
        - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubi-$(inputs.params.version)

      - name: init-database-template-ubuntu
        task_type: dockerfile_template
        tags: ["release"]
        template_file_extension: busybox

        inputs:
          - is_appdb

        output:
        - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubuntu-$(inputs.params.version)
