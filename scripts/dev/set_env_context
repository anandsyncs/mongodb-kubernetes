#!/usr/bin/env bash

set -euo pipefail

# script prepares environment variables relevant for the current context
# TODO add the context overriding via parameter

cd "$(git rev-parse --show-toplevel || echo "Failed to find git root"; exit 1)"

source scripts/funcs

# prepare_appdb_build builds readiness probe and generates a Dockerfile for AppDB
# The function is reused from different places so put into 'func'
# Must be run from docker/mongodb-enterprise-database
prepare_appdb_build() {
	GOOS='linux' go build -i -o readiness ../../probe || \
	   (../../scripts/build/prepare_build_environment && GOOS='linux' go build -i -o readiness ../../probe)
	mv readiness content/readinessprobe

	../Dockerfile.gen appdb "${IMAGE_TYPE}" > Dockerfile
}

# prepare_ops_manager_build prepares the dockerfile for Ops Manager.
# Must be run from docker/mongodb-enterprise-ops-manager
prepare_ops_manager_build() {
    ../Dockerfile.gen opsmanager "${IMAGE_TYPE}" > Dockerfile
}

if [[ -z "${IN_MEMORY_CONTEXT-}" ]]; then
    # Reading context file
    readonly root_dir="$HOME/.operator-dev"
    readonly context_file="$root_dir/current"

    if [[ ! -f ${context_file} ]]; then
        fatal "File \"${context_file}\" not found! You must init development environment using \"make init\" first"
    fi

    context=$(cat ${context_file})

    if [[ ! -f ${root_dir}/contexts/${context} ]]; then
        fatal "Configuration file \"${root_dir}/contexts/${context}\" not found!"
    fi

    # reading the 'om' file first and then the context file - this will allow to use custom connectivity parameters
    if [[ -f ${root_dir}/om ]]; then
        eval "$(cat ${root_dir}/om)"
    fi

    eval "$(cat ${root_dir}/contexts/${context})"

    # LOCAL_RUN indicates that the make script is run locally. This may affect different build/deploy decisions
    export LOCAL_RUN=true
    # version_id is similar to version_id from Evergreen. Used to differentiate different builds. Can be constant
    # for local run
    export version_id=$USER
else
    echo "Skipping reading context file. Note that all the configuration information\
         (REPO_URL, CLUSTER_TYPE) must be provided as environment variables!"

    # LOCAL_RUN=false indicates that the make script is run by Evergreen. This may affect different build/deploy decisions
    export LOCAL_RUN=false
fi

# guessing type of registry by url
# regular expression matching (https://www.tldp.org/LDP/abs/html/string-manipulation.html)
if [[ $(expr "${REPO_URL}" : '^localhost.*') -gt 0 ]]; then
    export REPO_TYPE="local"
elif [[ $(expr "${REPO_URL}" : '.*\.ecr\..*') -gt 0 ]]; then
    export REPO_TYPE="ecr"
else
    fatal "Failed to guess repository type based on url \"${REPO_URL}\""
fi

export IMAGE_TYPE="ubuntu"
if [[ "${CLUSTER_TYPE}" = "openshift" ]]; then
    export IMAGE_TYPE="rhel"
fi

# Appending image type (ubuntu/rhel) to the registry url (unless it's already appended)
[[ "$REPO_URL" != *${IMAGE_TYPE} ]] && export REPO_URL=${REPO_URL}/${IMAGE_TYPE}
export NAMESPACE=${NAMESPACE:-mongodb}

if [[ -z "${IN_MEMORY_CONTEXT-}" ]]; then
    export OPERATOR_DIR=${root_dir}
    export CURRENT_CONTEXT=${context}
fi
