#!/bin/bash

source scripts/funcs

# ensure all python files are correctly formatted with black
if ! which "black" > /dev/null; then
    pip3 install -r docker/mongodb-enterprise-tests/requirements-dev.txt
fi

if ! black --check --quiet .; then
    echo "Python formatting with black failed! Ensure black is installed and python files are correctly formatted."
    exit 1
fi

# pre-commit hook will go vet all the files being committed
# and also format them with go imports

export GO111MODULE=on
export GOFLAGS="-mod=vendor"

if [[ -z $GOPATH ]]; then
    echo "GOPATH is not configured"
    exit 1
fi

go_mod_files_changed=$(git diff --cached --name-only --diff-filter=ACM | grep '^go.*' | wc -l)
if [[ $go_mod_files_changed == "1" ]]; then
  echo 'ERROR: Should change both or neither of go.mod and go.sum'
  exit 1
fi

if find . -name "Makefile"|grep -v vendor|xargs grep "\${"
then
    echo 'ERROR: Makefiles should NEVER contain curly brackets variables'
    exit 1
fi

mkdir -p "${GOPATH}/bin"

go mod vendor

# important to turn off modules to ensure a global install
if ! [[ -x "$(command -v goimports)" ]]; then
    echo "installing goimports..."
    GO111MODULE=off go get golang.org/x/tools/cmd/goimports
fi

if ! [[ -x "$(command -v staticcheck)" ]]; then
    echo "installing go tools..."
    GO111MODULE=off go get -u honnef.co/go/tools/...
fi

# check for dead code
staticcheck -checks U1000,SA4006,ST1019 ./pkg/controller/... || exit 1

# some directories are excluded from vetting as they are auto-generated
vet_exclusions="github.com/10gen/ops-manager-kubernetes/pkg/apis/mongodb.com/v1
github.com/10gen/ops-manager-kubernetes/pkg/client/"
go vet $(go list ./... | grep -Fv "$vet_exclusions") || exit 1

gofiles=$(git ls-files | grep '.go$') 
unformatted=$(goimports -l $gofiles)
[[ -z "$unformatted" ]] && exit 0

for fn in $unformatted; do
        echo >&2 "formatting $PWD/$fn"
        goimports -w $PWD/$fn
        # FIXME: using git add in pre-commit hooks is temperamental
        git add $PWD/$fn
done

exit 0
