#!/usr/bin/env bash

set -Eeou pipefail


source scripts/dev/set_env_context.sh
source scripts/funcs/kubernetes
source scripts/funcs/printing

# Script builds and optionally pushes the test image
# Note, that unlike corresponding scripts for operator/database it adds the tag to the image - this is because our
# e2e procedure in Evergreen uses the same repo and git SHA is the only way to isolate different images - we just use the
# same approach

title "Building e2e tests application image..."

ensure_ecr_repository "${TEST_APP_REGISTRY}/mongodb-enterprise-tests"

cp -r public/helm_chart docker/mongodb-enterprise-tests
image="${TEST_APP_REGISTRY}/mongodb-enterprise-tests:${version_id:-latest}"
docker build docker/mongodb-enterprise-tests -t "${image}"
rm -rf docker/mongodb-enterprise-tests/helm_chart

docker push "${image}"

title "Enterprise tests successfully built and pushed to ${REPO_URL} registry"
