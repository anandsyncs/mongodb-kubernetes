#!/usr/bin/env bash
set -euo pipefail

cd "$(git rev-parse --show-toplevel || echo "Failed to find git root"; exit 1)"

source scripts/dev/set_env_context

title "Building Operator image..."

if [[ ${REPO_TYPE} = "local" ]]; then
	eval "$(minikube docker-env)"
	make -C docker/mongodb-enterprise-operator build IMAGE_DIR=local || scripts/build/prepare_build_environment && make -C docker/mongodb-enterprise-operator build IMAGE_DIR=local
	title "Operator image successfully built"
elif [[ ${REPO_TYPE} = "ecr" ]]; then
	repo_name="$(echo ${REPO_URL} | cut -d "/" -f 2)"

    operator_name="mongodb-enterprise-operator"
	if ! aws ecr describe-repositories | grep -q "${repo_name}/${operator_name}"; then
		aws ecr create-repository --repository-name="${repo_name}/${operator_name}"
	fi

    docker_file_dir="docker/${operator_name}"
    docker_file="${docker_file_dir}/Dockerfile"
    if [[ "${DEBUG-}" = "true" ]]; then
        docker_file="${docker_file}-debug"
        base_image="${REPO_URL}/${operator_name}"
    fi

    echo "using Dockerfile: ${docker_file}"
	# we do "dep ensure" and codegen only if there were some troubles building the binary - some optimization to avoid expensive step

	scripts/build/build_operator || (scripts/build/prepare_build_environment && scripts/build/build_operator)
    docker build -t "${repo_name}/${operator_name}:latest" "docker/${operator_name}" -f "${docker_file}"

	docker tag "${repo_name}"/mongodb-enterprise-operator "${REPO_URL}/${operator_name}"
	docker push "${REPO_URL}"/mongodb-enterprise-operator

	title "Operator image successfully built and pushed to the ECR registry"
elif [[ ${REPO_TYPE} = "quay" ]]; then
	title "Skipping build of the Operator as current Docker registry is quay.io"
fi
