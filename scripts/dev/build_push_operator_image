#!/usr/bin/env bash
set -euo pipefail

cd "$(git rev-parse --show-toplevel || echo "Failed to find git root"; exit 1)"

source scripts/dev/set_env_context

debug="${1-}"

title "Building Operator image..."

repo_host="$(echo ${REPO_URL} | cut -d "/" -f 1)"
repo_name="$(echo ${REPO_URL} | cut -d "/" -f 2)"
is_debug="False"

if [[ ${REPO_TYPE} = "ecr" ]] ; then
    ensure_ecr_repository "${REPO_URL}/mongodb-enterprise-operator"

    if [[ -n "${debug-}" ]]; then
        echo "Ensuring Security Group vpc for debug-svc"
        prefix="$(echo "nodes.${CLUSTER_NAME}" | sed s/.mongokubernetes.com//)"
        # extract the aws region from the kops output
        region="$(kops get cluster ${CLUSTER_NAME} | awk '{ print $3 }' | tail -1 | cut -d ',' -f1)"
        region="$(echo $region | sed 's/.$//')" # strip out the last "a", "b" or "c"
        group_id=$(aws ec2 describe-security-groups --region "${region}" | jq -r '.SecurityGroups[] | select(.GroupName | startswith( "'"$prefix"'")) | .GroupId')
        aws ec2 authorize-security-group-ingress --region "${region}" --group-id ${group_id} --protocol tcp --port 30042 --cidr "0.0.0.0/0" 2>/dev/null || true
        is_debug="True"
        echo "Building Operator Image in 'debug' mode"
    fi
fi

make -C docker/mongodb-enterprise-operator push IMAGE_DIR="${repo_name}" AWS_IMAGE_REPO="${repo_host}" \
    IMAGE_TYPE="${IMAGE_TYPE}" IS_DEBUG="${is_debug}"

title "Operator image successfully built and pushed to the ${REPO_TYPE} registry"
