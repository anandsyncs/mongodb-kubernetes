#!/usr/bin/env bash
set -euo pipefail

cd "$(git rev-parse --show-toplevel || echo "Failed to find git root"; exit 1)"

source scripts/dev/set_env_context

check_mandatory_param "${1-}" "scope"
scope=${1}

if [[ ${scope} = "all" ]]; then
    echo "Building Ops Manager and AppDB images for ALL versions listed in 'release.json'"
    versions=( $(jq --raw-output '.opsManagerImages[].version' < release.json) )
elif [[ ${scope} = "test" ]]; then
    echo "Building Ops Manager and AppDB images for TEST versions listed in 'release.json'"
    versions=( $(jq --raw-output '.opsManagerImages[] | select(.testing==true) | .version' < release.json) )
else
    # we consider this to be a single/multiple versions separated by ','
    echo "Building Ops Manager and AppDB images for specific versions: $scope"
    versions=( $(echo $scope | tr ',' '\n') )
fi

for version in "${versions[@]}"; do
    header "Building Ops Manager Image $version"
    make om-image om_version=${version}

    header "Building AppDB Image $version"
    make appdb om_version=${version}
done
