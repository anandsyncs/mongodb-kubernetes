#!/usr/bin/env bash
#
#

# setup_kind configures ecr credentials and placee them in
# ~/.docker/kind_config.json a config file in ~/.operator-dev/kind-ecr-config.yaml
# which can be used to with the --config flag when creating a kind cluster
setup_kind() {
  ecr_registry=${1}
  # First we need to create proper "auths" entry for our ECR registry,
  # using docker-credential-ecr-login (which is faster to install than Python + aws-cli).
  secret=$(echo "${ecr_registry}" | docker-credential-ecr-login get | jq -r .Secret)
  auth=$(echo "AWS:${secret}" | base64 -w0)

  # Add the login token (from aws ecr get-login)
  cat <<EOF > "${HOME}/.docker/kind_config.json"
{
    "auths": {
        "${ecr_registry}": {"auth": "${auth}"}
    }
}
EOF

  mkdir -p "$HOME/.operator-dev"
  # We make sure this patched docker/config.json file is mounted on each Kind node
  cat <<EOF > "${HOME}/.operator-dev/kind-ecr-config.yaml"
kind: Cluster
apiVersion: kind.sigs.k8s.io/v1alpha3
nodes:
- role: control-plane
  extraMounts:
  - containerPath: /var/lib/kubelet/config.json
    hostPath: ${HOME}/.docker/kind_config.json
EOF
}

if [[ "${kube_environment_name=}" != "kind" ]]; then
  echo "Skiping download of kind"
  exit 0
fi

if docker info 2>/dev/null | grep "Docker Root Dir"| grep -q "/var/lib/docker"; then
  # we need to reconfigure Docker so its image storage points to a
  # directory with enough space, in this case /data
  echo "Trying with /etc/docker/daemon.json file"
  sudo mkdir -p /etc/docker
  sudo chmod o+w /etc/docker
  cat <<EOF > /etc/docker/daemon.json
{
    "graph": "/data/docker",
    "storage-driver": "overlay2"
}
EOF


  sudo systemctl restart docker
  if docker info 2>/dev/null | grep "Docker Root Dir"| grep -q "/data/docker"; then
    echo "Docker storage configured correctly"
  else
    # The change didn't went through, we are not failing the test, but it might
    # fail because of no free space left in device.
    echo "Docker storage was not configured properly"
  fi
fi

if ! command -v kind &> /dev/null ; then
  # Store the lowercase name of Operating System
  os=$(uname | tr '[:upper:]' '[:lower:]')
  # This should be changed when needed
  latest_version="v0.7.0"

  mkdir -p "${workdir}/bin/"
  echo "Saving kind to ${workdir}/bin"
  curl --retry 3 --silent -L "https://github.com/kubernetes-sigs/kind/releases/download/${latest_version}/kind-${os}-amd64" -o kind

  chmod +x kind
  mv kind "${workdir}/bin"
  echo "Installed kind in ${workdir}/bin"
else
  echo "Kind is already present in this host"
  kind version
fi

mkdir -p "${HOME}/.docker"

setup_kind "${ecr_registry}"
