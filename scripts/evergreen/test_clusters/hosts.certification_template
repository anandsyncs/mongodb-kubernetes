## The PRELUDE of this should be generated by running deploy_openshift.py


# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
etcd

[OSEv3:vars]
# Enable Operator Lifecycle Management
openshift_enable_olm=true

# Combine infra and masters
#openshift_node_groups=[{'name': 'node-config-master-infra', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true'], 'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=true']}]

# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

# Defining htpasswd users
# The following line has failed a few times, not looking up the value of the OPENSHIFT_ADMIN_USER
openshift_master_htpasswd_users={'admin': '{{ lookup("env","OPENSHIFT_ADMIN_PASSWORD") }}'}

# openshift_master_htpasswd_users={'{{ lookup("env","OPENSHIFT_ADMIN_USER") }}': '{{ lookup("env","OPENSHIFT_ADMIN_PASSWORD") }}'}


# Use excluder to ignore Docker version mismatch (CentOS is ahead of our offical Docker version)
# `sudo yum erase python2-docker` if you need to nuke it on the node manually
openshift_enable_excluders=false

# Use smaller machines than the minimum, this is up to you
openshift_disable_check=disk_availability,memory_availability

# Pull in CI builds
# Follow redirect https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/origin.repo
# Add in result to below
openshift_additional_repos=[{'id': 'origin', 'name': 'origin', 'baseurl': 'https://storage.googleapis.com/origin-ci-test/logs/test_branch_origin_extended_conformance_gce/3486/artifacts/rpms', 'enabled': 1, 'gpgcheck': 0}]
openshift_docker_additional_registries=registry.reg-aws.openshift.com:443

# Add registry creds
# This allows you to pull images from the Red Hat Connect registry
# image_name is a test image to check the credentials

# You can obtain the ECR_PASSWORD by running:
# aws ecr get-login --no-include-email --region us-east-1


openshift_additional_registry_credentials=[{'host':'registry.connect.redhat.com','user':'{{ lookup("env","REDHAT_CONNECT_ADMIN_USER") }}','password':'{{ lookup("env","REDHAT_CONNECT_ADMIN_PASSWORD") }}','test_image':'mongodb/enterprise-operator'},{'host':'268558157000.dkr.ecr.us-east-1.amazonaws.com','user':'AWS','password':'{{ lookup("env","ECR_PASSWORD") }}','test_image':'dev/mongodb-enterprise-ops-manager:4.0.2.50187.20180905T1427Z-1'}]

openshift_cloudprovider_kind=aws
openshift_clusterid=operator-tests
openshift_cloudprovider_aws_access_key="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
openshift_cloudprovider_aws_secret_key="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"


###############################################################################
# Common/ Required configuration variables follow                             #
###############################################################################
# SSH user, this user should allow ssh based auth without requiring a
# password. If using ssh key based auth, then the key should be managed by an
# ssh agent.

ansible_user=centos

# If ansible_user is not root, ansible_become must be set to true and the
# user must be configured for passwordless sudo
ansible_become=yes

# Specify the deployment type. Valid values are origin and openshift-enterprise.
openshift_deployment_type=origin
#openshift_deployment_type=openshift-enterprise

# Specify the generic release of OpenShift to install. This is used mainly just during installation, after which we
# rely on the version running on the first master. Works best for containerized installs where we can usually
# use this to lookup the latest exact version of the container images, which is the tag actually used to configure
# the cluster. For RPM installations we just verify the version detected in your configured repos matches this
# release.
openshift_release="3.11"

# default subdomain to use for exposed routes, you should have wildcard dns
# for *.apps.test.example.com that points at your infra nodes which will run
# your router
openshift_master_default_subdomain=openshift-cluster.mongokubernetes.com

#Set cluster_hostname to point at your load balancer
openshift_master_cluster_hostname=openshift-cluster.mongokubernetes.com

openshift_master_cluster_public_hostname=master.openshift-cluster.mongokubernetes.com
