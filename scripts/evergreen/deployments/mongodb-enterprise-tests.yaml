# grant all permissions in all namespaces to the tests
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator-tests-service-account
  namespace: {{ .Values.namespace }}

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: operator-tests-role-binding-{{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: operator-tests-service-account
  namespace: {{ .Values.namespace }}

---
apiVersion: v1
kind: Pod
metadata:
  name: mongodb-enterprise-operator-tests
  namespace: {{ .Values.namespace }}
  labels:
    role: operator-tests
spec:
  serviceAccountName: operator-tests-service-account
  restartPolicy: Never
  terminationGracePeriodSeconds: 0

  containers:
  - name: mongodb-enterprise-operator-tests
    env:
    - name: OM_HOST
      value: {{ .Values.baseUrl }}
    - name: OM_API_KEY
      value: {{ .Values.apiKey }}
    - name: OM_USER
      value: {{ .Values.apiUser }}
    - name: OM_ORGID
      value: {{ .Values.orgId }}
    - name: PROJECT_NAMESPACE
      value: {{ .Values.namespace }}
    # We can pass additional options to pytest. For instance -s
    - name: PYTEST_ADDOPTS
      value: {{ .Values.pytest.addopts }}
    - name: SKIP_EXECUTION
      value: {{ .Values.skipExecution}}
    - name: AWS_ACCESS_KEY_ID
      value: {{ .Values.aws.accessKey}}
    - name: AWS_SECRET_ACCESS_KEY
      value: {{ .Values.aws.secretAccessKey}}
    - name: PYTHONUNBUFFERED
      value: 'true'
    - name: PYTHONWARNINGS
      value: 'ignore:yaml.YAMLLoadWarning,ignore:urllib3.InsecureRequestWarning'
    - name: POD_NAME
      value: 'mongodb-enterprise-operator-testing-pod'
{{ if .Values.managedSecurityContext }}
    - name: MANAGED_SECURITY_CONTEXT
      value: 'true'
{{ else }}
    - name: MANAGED_SECURITY_CONTEXT
      value: 'false'
{{  end }}
    image: {{ .Values.repo }}/mongodb-enterprise-tests:{{ .Values.tag }}
    # Options to pytest command should go in the pytest.ini file.
    command: ["pytest"]
    args: ["-m", "{{ .Values.taskName }}"]
    imagePullPolicy: Always
